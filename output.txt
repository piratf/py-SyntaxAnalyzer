argc = 3
===============================
=> start parse.
line 0: ( num : 123 )
line 0: ( + : + )
line 0: ( num : 123 )
line 0: ( * : * )
line 0: ( num : 123 )
 found.
line    0  - <  0 :  4 > - ( num : 123 ) 
content: 123 + 123 * 123;
line    0  - <  4 :  6 > - ( + : + ) 
content: 123 + 123 * 123;
line    0  - <  6 : 10 > - ( num : 123 ) 
content: 123 + 123 * 123;
line    0  - < 10 : 12 > - ( * : * ) 
content: 123 + 123 * 123;
line    0  - < 12 : 16 > - ( num : 123 ) 
content: 123 + 123 * 123;
line    0  - < 15 : 16 > - ( ; : ; ) 
content: 123 + 123 * 123;
============= Lexical Analyze Finished =============
============= 0 ERROR======= Grammar display ===========
count: 8
======= reg display =======
name = L
content:
  - ['EXP', ';', 'L']
  - ['\\e']
first set:
{'', 'id', 'num', '(', '\\e'}
follow set:
{'#'}
======= display end =======
======= reg display =======
name = EXP
content:
  - ['T', 'EXP+']
first set:
{'', 'id', 'num', '('}
follow set:
{')', ';'}
======= display end =======
======= reg display =======
name = EXP+
content:
  - ['+', 'T', 'EXP+']
  - ['-', 'T', 'EXP+']
  - ['=', 'T', 'EXP+']
  - ['\\e']
first set:
{'+', '-', '=', '\\e'}
follow set:
{')', ';'}
======= display end =======
======= reg display =======
name = T
content:
  - ['F', 'T+']
first set:
{'', 'id', 'num', '('}
follow set:
{';', '+', ')', '-', '='}
======= display end =======
======= reg display =======
name = T+
content:
  - ['*', 'F', 'T+']
  - ['/', 'F', 'T+']
  - ['mod', 'F', 'T+']
  - ['\\e']
first set:
{'mod', '\\e', '*', '/'}
follow set:
{';', '+', ')', '-', '='}
======= display end =======
======= reg display =======
name = F
content:
  - ['(', 'EXP', ')']
  - ['id']
  - ['NUM']
first set:
{'', 'id', 'num', '('}
follow set:
{'/', ')', 'mod', ';', '*', '+', '-', '='}
======= display end =======
======= reg display =======
name = NUM
content:
  - ['']
  - ['num', 'NUM+']
first set:
{'', 'num'}
follow set:
{'/', ')', 'mod', ';', '*', '+', '-', '='}
======= display end =======
======= reg display =======
name = NUM+
content:
  - ['e', 'num']
  - ['.', 'num']
  - ['\\e']
first set:
{'e', '.', '\\e'}
follow set:
{'/', ')', 'mod', ';', '*', '+', '-', '='}
======= display end =======
======= Grammar display end =======

========================== prediction table display =========================
[]             []             [#]            [(]            [)]            [*]            [+]            [-]            [.]            [/]            [;]            [=]            [\e]           [e]            [id]           [mod]          [num]          
[L]            [EXP ; L]      [\e]           [EXP ; L]      []             []             []             []             []             []             []             []             [\e]           []             [EXP ; L]      []             [EXP ; L]      
[EXP]          [T EXP+]       []             [T EXP+]       []             []             []             []             []             []             []             []             []             []             [T EXP+]       []             [T EXP+]       
[EXP+]         []             []             []             [\e]           []             [+ T EXP+]     [- T EXP+]     []             []             [\e]           [= T EXP+]     [\e]           []             []             []             []             
[T]            [F T+]         []             [F T+]         []             []             []             []             []             []             []             []             []             []             [F T+]         []             [F T+]         
[T+]           []             []             []             [\e]           [* F T+]       [\e]           [\e]           []             [/ F T+]       [\e]           [\e]           [\e]           []             []             [mod F T+]     []             
[F]            [NUM]          []             [( EXP )]      []             []             []             []             []             []             []             []             []             []             [id]           []             [NUM]          
[NUM]          []             []             []             []             []             []             []             []             []             []             []             []             []             []             []             [num NUM+]     
[NUM+]         []             []             []             [\e]           [\e]           [\e]           [\e]           [. num]        [\e]           [\e]           [\e]           [\e]           [e num]        []             [\e]           []             
========================== prediction table display end ==========================

line 0   : <   0 :   4 > - ( num : 123 )
line 0   : <   4 :   6 > - ( + : + )
line 0   : <   6 :  10 > - ( num : 123 )
line 0   : <  10 :  12 > - ( * : * )
line 0   : <  12 :  16 > - ( num : 123 )
line 0   : <  15 :  16 > - ( ; : ; )
====================== start analyze =========================

top = L ip = num
string = ['num', '+', 'num', '*', 'num', ';', '#']
stack = ['#', 'L']
pre len = 1
cur len = 4
>>> add
{'L': {}, 'EXP': {}, ';': {}}
{'L': {'L': {}, 'EXP': {}, ';': {}}}

top = EXP ip = num
string = ['num', '+', 'num', '*', 'num', ';', '#']
stack = ['#', 'L', ';', 'EXP']
pre len = 3
cur len = 5
>>> add
{'T': {}, 'EXP+': {}}
{'L': {'L': {}, 'EXP': {'T': {}, 'EXP+': {}}, ';': {}}}
{'L': {}, 'EXP': {'T': {}, 'EXP+': {}}, ';': {}}

top = T ip = num
string = ['num', '+', 'num', '*', 'num', ';', '#']
stack = ['#', 'L', ';', 'EXP+', 'T']
pre len = 4
cur len = 6
>>> add
{'T+': {}, 'F': {}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {}}, 'EXP+': {}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {}}, 'EXP+': {}}, ';': {}}
{'T': {'T+': {}, 'F': {}}, 'EXP+': {}}

top = F ip = num
string = ['num', '+', 'num', '*', 'num', ';', '#']
stack = ['#', 'L', ';', 'EXP+', 'T+', 'F']
pre len = 5
cur len = 6
>>> add
{'NUM': {}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {}}}, 'EXP+': {}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {}}}, 'EXP+': {}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {}}}, 'EXP+': {}}
{'T+': {}, 'F': {'NUM': {}}}

top = NUM ip = num
string = ['num', '+', 'num', '*', 'num', ';', '#']
stack = ['#', 'L', ';', 'EXP+', 'T+', 'NUM']
pre len = 5
cur len = 7
>>> add
{'num': {}, 'NUM+': {}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}
{'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}
{'NUM': {'num': {}, 'NUM+': {}}}

top = num ip = num
string = ['num', '+', 'num', '*', 'num', ';', '#']
stack = ['#', 'L', ';', 'EXP+', 'T+', 'NUM+', 'num']
---terminal
{'num': {}, 'NUM+': {}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}
{'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}
{'NUM': {'num': {}, 'NUM+': {}}}

top = NUM+ ip = +
string = ['+', 'num', '*', 'num', ';', '#']
stack = ['#', 'L', ';', 'EXP+', 'T+', 'NUM+']
pre len = 5
cur len = 5
---empty
{'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}
{'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}

top = T+ ip = +
string = ['+', 'num', '*', 'num', ';', '#']
stack = ['#', 'L', ';', 'EXP+', 'T+']
pre len = 4
cur len = 4
---empty
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}

top = EXP+ ip = +
string = ['+', 'num', '*', 'num', ';', '#']
stack = ['#', 'L', ';', 'EXP+']
pre len = 3
cur len = 6
>>> add
{'+': {}, 'T': {}, 'EXP+': {}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {}, 'EXP+': {}}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {}, 'EXP+': {}}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {}, 'EXP+': {}}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {}, 'EXP+': {}}}

top = + ip = +
string = ['+', 'num', '*', 'num', ';', '#']
stack = ['#', 'L', ';', 'EXP+', 'T', '+']
---terminal
{'+': {}, 'T': {}, 'EXP+': {}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {}, 'EXP+': {}}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {}, 'EXP+': {}}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {}, 'EXP+': {}}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {}, 'EXP+': {}}}

top = T ip = num
string = ['num', '*', 'num', ';', '#']
stack = ['#', 'L', ';', 'EXP+', 'T']
pre len = 4
cur len = 6
>>> add
{'T+': {}, 'F': {}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {}}, 'EXP+': {}}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {}}, 'EXP+': {}}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {}}, 'EXP+': {}}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {}}, 'EXP+': {}}}
{'+': {}, 'T': {'T+': {}, 'F': {}}, 'EXP+': {}}

top = F ip = num
string = ['num', '*', 'num', ';', '#']
stack = ['#', 'L', ';', 'EXP+', 'T+', 'F']
pre len = 5
cur len = 6
>>> add
{'NUM': {}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {'NUM': {}}}, 'EXP+': {}}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {'NUM': {}}}, 'EXP+': {}}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {'NUM': {}}}, 'EXP+': {}}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {'NUM': {}}}, 'EXP+': {}}}
{'+': {}, 'T': {'T+': {}, 'F': {'NUM': {}}}, 'EXP+': {}}
{'T+': {}, 'F': {'NUM': {}}}

top = NUM ip = num
string = ['num', '*', 'num', ';', '#']
stack = ['#', 'L', ';', 'EXP+', 'T+', 'NUM']
pre len = 5
cur len = 7
>>> add
{'num': {}, 'NUM+': {}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'+': {}, 'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}
{'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}
{'NUM': {'num': {}, 'NUM+': {}}}

top = num ip = num
string = ['num', '*', 'num', ';', '#']
stack = ['#', 'L', ';', 'EXP+', 'T+', 'NUM+', 'num']
---terminal
{'num': {}, 'NUM+': {}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'+': {}, 'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}
{'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}
{'NUM': {'num': {}, 'NUM+': {}}}

top = NUM+ ip = *
string = ['*', 'num', ';', '#']
stack = ['#', 'L', ';', 'EXP+', 'T+', 'NUM+']
pre len = 5
cur len = 5
---empty
{'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'+': {}, 'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}
{'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}

top = T+ ip = *
string = ['*', 'num', ';', '#']
stack = ['#', 'L', ';', 'EXP+', 'T+']
pre len = 4
cur len = 7
>>> add
{'T+': {}, 'F': {}, '*': {}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'+': {}, 'T': {'T+': {'T+': {}, 'F': {}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}
{'T+': {'T+': {}, 'F': {}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}
{'T+': {'T+': {}, 'F': {}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}

top = * ip = *
string = ['*', 'num', ';', '#']
stack = ['#', 'L', ';', 'EXP+', 'T+', 'F', '*']
---terminal
{'T+': {}, 'F': {}, '*': {}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'+': {}, 'T': {'T+': {'T+': {}, 'F': {}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}
{'T+': {'T+': {}, 'F': {}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}
{'T+': {'T+': {}, 'F': {}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}

top = F ip = num
string = ['num', ';', '#']
stack = ['#', 'L', ';', 'EXP+', 'T+', 'F']
pre len = 5
cur len = 6
>>> add
{'NUM': {}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}
{'T+': {'T+': {}, 'F': {'NUM': {}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}
{'T+': {'T+': {}, 'F': {'NUM': {}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}
{'T+': {}, 'F': {'NUM': {}}, '*': {}}

top = NUM ip = num
string = ['num', ';', '#']
stack = ['#', 'L', ';', 'EXP+', 'T+', 'NUM']
pre len = 5
cur len = 7
>>> add
{'num': {}, 'NUM+': {}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}
{'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}
{'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}
{'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}
{'NUM': {'num': {}, 'NUM+': {}}}

top = num ip = num
string = ['num', ';', '#']
stack = ['#', 'L', ';', 'EXP+', 'T+', 'NUM+', 'num']
---terminal
{'num': {}, 'NUM+': {}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}
{'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}
{'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}
{'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}
{'NUM': {'num': {}, 'NUM+': {}}}

top = NUM+ ip = ;
string = [';', '#']
stack = ['#', 'L', ';', 'EXP+', 'T+', 'NUM+']
pre len = 5
cur len = 5
---empty
{'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}
{'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}
{'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}
{'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}

top = T+ ip = ;
string = [';', '#']
stack = ['#', 'L', ';', 'EXP+', 'T+']
pre len = 4
cur len = 4
---empty
{'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}
{'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}
{'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}

top = EXP+ ip = ;
string = [';', '#']
stack = ['#', 'L', ';', 'EXP+']
pre len = 3
cur len = 3
---empty
{'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}
{'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}

top = ; ip = ;
string = [';', '#']
stack = ['#', 'L', ';']
---terminal
{'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}

top = L ip = #
string = ['#']
stack = ['#', 'L']
pre len = 1
cur len = 1
---empty
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'L': {'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}}
{'L': {}, 'EXP': {'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}, ';': {}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
{'T': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {'+': {}, 'T': {'T+': {'T+': {}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}, '*': {}}, 'F': {'NUM': {'num': {}, 'NUM+': {}}}}, 'EXP+': {}}}
====================== Analyze Success! ========================
==========================================================
print tree
L
['L', 'EXP', ';']
EXP
['T', 'EXP+']
T
['T+', 'F']
F
['NUM']
NUM
['num', 'NUM+']
EXP+
['+', 'T', 'EXP+']
T
['T+', 'F']
T+
['T+', 'F', '*']
F
['NUM']
NUM
['num', 'NUM+']
F
['NUM']
NUM
['num', 'NUM+']
