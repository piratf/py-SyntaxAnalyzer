======= Grammar display ===========
count: 6
======= reg display =======
name = L
content:
  - ['E', ';', 'L']
  - ['\\e']
first set:
{'\\e', 'id', 'num', '('}
follow set:
{'#'}
======= display end =======
======= reg display =======
name = E
content:
  - ['T', 'E+']
first set:
{'id', 'num', '('}
follow set:
{')', ';'}
======= display end =======
======= reg display =======
name = E+
content:
  - ['+', 'T', 'E+']
  - ['-', 'T', 'E+']
  - ['\\e']
first set:
{'\\e', '+', '-'}
follow set:
{')', ';'}
======= display end =======
======= reg display =======
name = T
content:
  - ['F', 'T+']
first set:
{'id', 'num', '('}
follow set:
{')', '+', '-', ';'}
======= display end =======
======= reg display =======
name = T+
content:
  - ['*', 'F', 'T+']
  - ['/', 'F', 'T+']
  - ['mod', 'F', 'T+']
  - ['\\e']
first set:
{'*', '\\e', '/', 'mod'}
follow set:
{')', '+', '-', ';'}
======= display end =======
======= reg display =======
name = F
content:
  - ['(', 'E', ')']
  - ['id']
  - ['num']
first set:
{'id', 'num', '('}
follow set:
{'*', '/', '+', ';', '-', 'mod', ')'}
======= display end =======
======= Grammar display end =======

========================== prediction table display =========================
[]                   [#]                  [(]                  [)]                  [*]                  [+]                  [-]                  [/]                  [;]                  [\e]                 [id]                 [mod]                [num]                
[L]                  [\e]                 [E ; L]              []                   []                   []                   []                   []                   []                   [\e]                 [E ; L]              []                   [E ; L]              
[E]                  []                   [T E+]               []                   []                   []                   []                   []                   []                   []                   [T E+]               []                   [T E+]               
[E+]                 []                   []                   [\e]                 []                   [+ T E+]             [- T E+]             []                   [\e]                 [\e]                 []                   []                   []                   
[T]                  []                   [F T+]               []                   []                   []                   []                   []                   []                   []                   [F T+]               []                   [F T+]               
[T+]                 []                   []                   [\e]                 [* F T+]             [\e]                 [\e]                 [/ F T+]             [\e]                 [\e]                 []                   [mod F T+]           []                   
[F]                  []                   [( E )]              []                   []                   []                   []                   []                   []                   []                   [id]                 []                   [num]                
========================== prediction table display end =====================

line 0   : <   0 :   4 > - ( id : 123 )
line 0   : <   4 :   6 > - ( + : + )
line 0   : <   6 :  10 > - ( id : 123 )
line 0   : <  10 :  12 > - ( * : * )
line 0   : <  12 :  16 > - ( id : 123 )
line 0   : <  15 :  16 > - ( ; : ; )
line 1   : <   0 :   4 > - ( id : 123 )
line 1   : <   4 :   6 > - ( * : * )
line 1   : <   6 :  10 > - ( id : 123 )
line 1   : <  10 :  12 > - ( * : * )
line 1   : <  12 :  16 > - ( id : 123 )
line 1   : <  15 :  16 > - ( ; : ; )
====================== start analyze =========================
top = L ip = id
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L']
top = E ip = id
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E']
top = T ip = id
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T']
top = F ip = id
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+', 'F']
top = id ip = id
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+', 'id']
top = T+ ip = +
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+']
top = E+ ip = +
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+']
top = + ip = +
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T', '+']
top = T ip = id
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T']
top = F ip = id
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+', 'F']
top = id ip = id
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+', 'id']
top = T+ ip = *
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+']
top = * ip = *
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+', 'F', '*']
top = F ip = id
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+', 'F']
top = id ip = id
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+', 'id']
top = T+ ip = ;
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+']
top = E+ ip = ;
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+']
top = ; ip = ;
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';']
top = L ip = id
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L']
top = E ip = id
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E']
top = T ip = id
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T']
top = F ip = id
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+', 'F']
top = id ip = id
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+', 'id']
top = T+ ip = *
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+']
top = * ip = *
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+', 'F', '*']
top = F ip = id
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+', 'F']
top = id ip = id
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+', 'id']
top = T+ ip = *
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+']
top = * ip = *
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+', 'F', '*']
top = F ip = id
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+', 'F']
top = id ip = id
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+', 'id']
top = T+ ip = ;
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+', 'T+']
top = E+ ip = ;
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';', 'E+']
top = ; ip = ;
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L', ';']
top = L ip = #
string = ['id', '+', 'id', '*', 'id', ';', 'id', '*', 'id', '*', 'id', ';', '#']
stack = ['#', 'L']
====================== Analyze Success! ========================
